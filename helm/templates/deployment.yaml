apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sensingdevice.fullname" . }}
  labels:
    {{- include "sensingdevice.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "sensingdevice.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sensingdevice.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "sensingdevice.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.monitoring.enabled}}
        - name: cm-sidecarproxy
          image: envoyproxy/envoy-dev:latest
          volumeMounts:
          - name: {{ include "sensingdevice.configmap" . }}
            mountPath: /etc/envoy/envoy.yaml
            subPath: envoy.yaml
          ports:
            - name: http
              containerPort: 10000
              protocol: TCP
        {{- end}}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{ if .Values.ingress.enabled }}
          env:
          {{- if .Values.extraEnvVars }}
            {{- range .Values.extraEnvVars }}
              - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.postgresql.enabled }}
            - name: POSTGRESQL_DATABASE_USER      
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: POSTGRESQL_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.secretName" . }}
                  key: postgresql-password
            - name: POSTGRESQL_DATABASE_NAME      
              value: {{ .Values.postgresql.postgresqlDatabase }}
            - name: POSTGRESQL_DATABASE_HOST      
              value: {{ include "postgresql.serviceName" . }}
          {{- end }}
          {{- if .Values.mongodb.enabled }}
            - name: MONGODB_DATABASE_USER      
              value: {{ .Values.mongodb.auth.username }}
            - name: MONGODB_DATABASE_PASSWORD      
              valueFrom:
                secretKeyRef:
                  name: {{ include "mongodb.secretName" . }}
                  key: mongodb-password
            - name: MONGODB_DATABASE_NAME      
              value: {{ .Values.mongodb.auth.database }}
            - name: MONGODB_DATABASE_HOST      
              value: {{ include "mongodb.serviceName" . }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{ end }}       
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      {{- if .Values.monitoring.enabled}}
      volumes:
        - name: {{ include "sensingdevice.configmap" . }}
          configMap:
            name: {{ include "sensingdevice.configmapfile" . }}
      {{- end}}

